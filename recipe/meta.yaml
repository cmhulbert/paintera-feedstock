{% set name = "paintera" %}
{% set version = "0.18.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 26e6a0b31ce0d5c10988ebbea791e251f62520de8231fdafe6b26a30a4348559

build:
  number: 0
  script: "{{ PYTHON }} -m pip install . -vvv"
  noarch: python
  entry_points:
    - paintera=paintera:launch_paintera
    - generate-paintera-bash-completion=paintera:generate_paintera_bash_completion

requirements:
  host:
    - python >=3
    - pip
    - jgo >=0.4.0
  run:
    - python >=3
    - jgo >=0.4.0
    - paintera-conversion-helper

test:
  commands:
    - test -f $PREFIX/bin/paintera  # [unix]
    - test -f $PREFIX/bin/generate-paintera-bash-completion  # [unix]
    # - test -f $PREFIX/share/bash-completion/completions/paintera  # [unix] # use this once there is a good way of running generate-paintera-bash-completion after installation
    # - paintera --help # use this once Java/maven is figured out on host
    # - generate-paintera-bash-completion --help # use this once Java/maven is figured out on host
    # - test "$(paintera --version 2>&1)" = "{{ version }}"  # [unix] # use this test once --version is changed to stdout instead of logging
  imports:
    paintera

about:
  home: https://github.com/saalfeldlab/paintera-cmd
  license: GPL2
  license_family: GPL
  license_file: LICENSE.txt
  summary: 'Python command line launcher for Paintera'
  doc_url: https://github.com/saalfeldlab/paintera-cmd
  dev_url: https://github.com/saalfeldlab/paintera-cmd

extra:
  recipe-maintainers:
    - hanslovsky
    - igorpisarev
    - axtimwalde
